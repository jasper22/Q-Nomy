apiVersion: v1
kind: Service
metadata:
  labels:
    app: q-nomy
    role: internal-network
  name: sqldatabase-k8s
spec:
  type: ClusterIP
  selector:
    app: q-nomy
    role: sqldatabase
    q.nomy: sqldatabase
  ports:
  - name: "1487-to-1433"
    port: 1487
    targetPort: 1433
status:
  loadBalancer: {}

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: task-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---      

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: q-nomy
    tier: backend
  name: sqldatabase
spec:
  replicas: 1
  selector:
    matchLabels:
      app: q-nomy
      role: sqldatabase
      q.nomy: sqldatabase
  strategy: {}
  template:
    metadata:
      labels:
        app: q-nomy
        role: sqldatabase
        q.nomy: sqldatabase
    spec:
      restartPolicy: Always
      serviceAccountName: ""
      containers:
      - image: docker.local:5000/sqldatabase:1.0
        imagePullPolicy: "Always"
        name: sqldatabase
        ports:
        - containerPort: 1433
        resources: {}
        livenessProbe:
          tcpSocket:
            port: 1433
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          tcpSocket:
            port: 1433
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts: 
          - mountPath: "/var/opt/mssql"
            name: task-pv-storage
      volumes:
      - name: task-pv-storage
        persistentVolumeClaim:
          claimName: task-pv-claim  

status: {}
